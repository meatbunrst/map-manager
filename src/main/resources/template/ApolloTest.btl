package ${g.codePackage}.test;

import ${g.codePackage}.entity.${g.entityName}Entity;
import ${g.codePackage}.service.${g.entityName}Service;
import com.baomidou.mybatisplus.core.conditions.query.QueryWrapper;
import org.junit.Test;
import org.junit.runner.RunWith;
import lombok.extern.slf4j.Slf4j;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.test.context.junit4.SpringRunner;
import java.util.Date;
import com.baomidou.mybatisplus.core.toolkit.Sequence;
import java.util.List;
import com.google.common.collect.Lists;
import com.baomidou.mybatisplus.core.conditions.query.LambdaQueryWrapper;
/**
* ${g.name}Test  测试业务接口
*
* @author ${g.author}
* @date ${g.date}
*/
@RunWith(SpringRunner.class)
@SpringBootTest
@Slf4j
public class ${g.entityName}Test {

    <%for(field in t.fields){%>
    <%if (field.isKey == 2) {
    keyType= field.type;
    keyName = field.name;}
    %>
    <%}%>
    @Autowired
    private ${g.entityName}Service ${strutil.toLowerCase(strutil.subStringTo (g.entityName,0,1))}${strutil.subString(g.entityName,1)}Service;

    /**
    * 根据 model 条件，查询总记录数
    */
    @Test
    public void selectCountTest(){

        ${g.entityName}Entity entity = new ${g.entityName}Entity();
        int count = ${strutil.toLowerCase(strutil.subStringTo (g.entityName,0,1))}${strutil.subString(g.entityName,1)}Service.selectCount(entity);

        log.info("数量count："+count);
    }

    /**
    * 根据 model 条件，查询总记录数
    */
    @Test
    public void selectAllTest(){

        ${g.entityName}Entity entity = new ${g.entityName}Entity();
        List<${g.entityName}Entity> list1 = ${strutil.toLowerCase(strutil.subStringTo (g.entityName,0,1))}${strutil.subString(g.entityName,1)}Service.selectList(entity);

        QueryWrapper<${g.entityName}Entity> queryWrapper = new QueryWrapper<>();
        List<${g.entityName}Entity> list2 = ${strutil.toLowerCase(strutil.subStringTo (g.entityName,0,1))}${strutil.subString(g.entityName,1)}Service.list(queryWrapper);

        log.info("查询完成");
    }

    /**
    * 根据 LambdaQuery 条件，查询总记录数
    */
    @Test
    public void LambdaQueryTest(){
        LambdaQueryWrapper<${g.entityName}Entity> wrapper = new LambdaQueryWrapper<>();
        ${g.entityName}Entity entity = new ${g.entityName}Entity();

        <%for(field in t.fields){%>
        wrapper.eq(${g.entityName}Entity::get${strutil.toUpperCase(strutil.subStringTo(field.name,0,1))}${strutil.subString(field.name,1)},entity.get${strutil.toUpperCase(strutil.subStringTo(field.name,0,1))}${strutil.subString(field.name,1)}());
        <%}%>
        List<${g.entityName}Entity> list = ${strutil.toLowerCase(strutil.subStringTo (g.entityName,0,1))}${strutil.subString(g.entityName,1)}Service.list(wrapper);
        log.info("查询完成");
    }


    /**
    * 根据 model 条件，删除 测试
    */
    @Test
    public void deleteByModelTest(){
        ${g.entityName}Entity entity = new ${g.entityName}Entity();
        boolean execute = ${strutil.toLowerCase(strutil.subStringTo (g.entityName,0,1))}${strutil.subString(g.entityName,1)}Service.deleteByModel(entity);
        log.info("执行结果："+execute);
    }


    /**
    * 根据 model 条件，更新测试
    */
    @Test
    public void updateByModelTest(){
        ${g.entityName}Entity entity = new ${g.entityName}Entity();
        // 这个填写地址
        boolean execute = ${strutil.toLowerCase(strutil.subStringTo (g.entityName,0,1))}${strutil.subString(g.entityName,1)}Service.updateById(entity);
        log.info("执行结果："+execute);
    }

    /**
    * 添加 entity 测试
    */
    @Test
    public void addTest(){
        ${g.entityName}Entity entity = new ${g.entityName}Entity();
        boolean execute = ${strutil.toLowerCase(strutil.subStringTo (g.entityName,0,1))}${strutil.subString(g.entityName,1)}Service.save(entity);
        log.info("执行结果："+execute);
    }

    /**
    * 添加 批量 测试
    */
    @Test
    public void insertBatchTest(){
        Sequence sequence = new Sequence(0, 0);
        List<${g.entityName}Entity> list = Lists.newArrayList();
        for (int i = 0; i < 100; i++) {
            ${g.entityName}Entity entity = new ${g.entityName}Entity();
            <% if (keyType == 'String'){ %>
            entity.set${strutil.toUpperCase(strutil.subStringTo (keyName,0,1))}${strutil.subString  (keyName,1)}(String.valueOf(sequence.nextId()));
            <% }else{ %>
            entity.set${strutil.toUpperCase(strutil.subStringTo (keyName,0,1))}${strutil.subString  (keyName,1)}(sequence.nextId());
            <%}%>
            list.add(entity);
        }
        boolean execute = ${strutil.toLowerCase(strutil.subStringTo (g.entityName,0,1))}${strutil.subString(g.entityName,1)}Service.saveBatch(list);
        log.info("执行结果："+execute);
    }

}
