<template>
  <el-dialog
    :title="title"
    :close-on-click-modal="false"
    :visible.sync="visible"
    center>
    <el-form :model="${v.config.formName}" :rules="dataRule" ref="${v.config.formName}" @keyup.enter.native="dataFormSubmit()" label-width="80px">
        <%for(item in v.list){%>
        <% if (item.type == 'input'){ %>
        <el-form-item label="${item.name}" prop="${item.key}">
          <el-input v-model="${item.model}" clearable
                    placeholder="${item.options.placeholder}"
          ></el-input>
        </el-form-item>
        <%}else if(item.type == 'textarea'){%>
        <el-form-item label="${item.name}" prop="${item.key}">
          <el-input type="textarea" :rows="5"
                    v-model="${item.model}"
                    :placeholder="${item.options.placeholder}"
          ></el-input>
        </el-form-item>
        <%}else if(item.type == 'number'){%>
        <el-form-item label="${item.name}" prop="${item.key}">
          <el-input-number
                  v-model="${item.model}"
                  :step="${item.options.step}"
                  controls-position="right"
          ></el-input-number>
        </el-form-item>
        <%}else if(item.type == 'radio'){%>
        <el-form-item label="${item.name}" prop="${item.key}">
          <el-radio-group
                  v-model="${item.model}">
              <el-radio   :style="{display:${has(item.options.inline) && item.options.inline=='block'?"block":"inline-block"}}"
                      :label="item.value"   v-for="(item, index) in ( ${item.model}Options )" :key="item.value + index" >
                    ${has(item.options.showLabel)?'item.label':' item.value'}
              </el-radio>
          </el-radio-group>
        </el-form-item>
        <%}else if(item.type == 'checkbox'){%>
        <el-form-item label="${item.name}" prop="${item.key}">
          <el-checkbox-group  v-model="${item.model}"
            <el-checkbox
                    :style="{display:${has(item.options.inline) && item.options.inline=='block'?"block":"inline-block"}}"
            :label="item.value"   v-for="(item, index) in (${item.model}Options )" :key="item.value + index"  >
            <template v-else>
              ${has(item.options.showLabel)?'item.label':' item.value'}
            </template>
            </el-checkbox>
          </el-checkbox-group>
        </el-form-item>
        <%}else if(item.type == 'time'){%>
        <el-form-item label="${item.name}" prop="${item.key}">
          <el-time-picker
                  v-model="${item.model}"
                  :placeholder="${item.options.placeholder}"
                  :start-placeholder="${item.options.startPlaceholder}"
                  :end-placeholder="${item.options.endPlaceholder}"
                  :readonly="${item.options.readonly}"
                  :disabled="${item.options.disabled}"
                  :editable="${item.options.editable}"
                  :clearable="${item.options.clearable}"
                  :arrowControl="${item.options.arrowControl}"
                  :value-format="${item.options.format}"
          >
          </el-time-picker>
        </el-form-item>
        <%}else if(item.type == 'date'){%>
        <el-form-item label="${item.name}" prop="${item.key}">
          <el-date-picker
                  v-model="${item.model}"
                  value-format="yyyy-MM-dd"
                  :placeholder="${item.options.placeholder}"
                  :readonly="${item.options.readonly}"
                  :disabled="${item.options.disabled}"
                  :editable="${item.options.editable}"
                  :clearable="${item.options.clearable}"
          >
          </el-date-picker>
        </el-form-item>
        <%}else if(item.type == 'rate'){%>

        <%}else if(item.type == 'select'){%>
        <el-form-item label="${item.name}" prop="${item.key}">
          <el-select
              v-model="${item.model}"
              :disabled="${item.options.disabled}"
              :multiple="${item.options.multiple}"
              :clearable="${item.options.clearable}"
              :placeholder="${item.options.placeholder}">
              <el-option v-for="item in ${item.model}Options" :key="item.value" :value="item.value" :label="${has(item.options.showLabel)?'item.label':' item.value'}"></el-option>
          </el-select>
        </el-form-item>
        <%}%>
        <%}%>
    </el-form>
    <span slot="footer" class="dialog-footer">
      <el-button @click="visible = false">取消</el-button>
      <el-button type="primary" @click="dataFormSubmit()">确定</el-button>
    </span>
  </el-dialog>
</template>

<script>
  export default {
    data () {
    <%for(item in v.ruleList){%>
        <%for(rule in item.rules){%>
            <%if (rule.required != 1){%>
      let validate${item.key} = (rule, value, callback) => {
          if ( !/${rule.pattern}/.test(value)) {
              callback(new Error('${rule.message}'))
          } else {
              callback()
          }
      }
            <%}%>
        <%}%>
    <%}%>
      return {
        visible: false,
        flag:'',
        title: '',
        formDisabled: false,
        ${v.config.formName}: {
        <%for(item in v.list){%>
          <% if (item.type == 'input'){ %>
          <%}else if(item.type == 'radio' || item.type == 'checkbox' || item.type == 'select'){%>
          ${item.key}Options: [ <%for(lableItem in item.options.options){%> { value: '${lableItem.value}',
                      label: '${lableItem.label}'}  <%if (!lableItemLP.last){%>,<%}%> <%}%>],
          <%}%>
        <%}%>
        <%for(item in v.list){%>
         <% if (item.type == 'input'){ %>
          ${item.key}: ''<%if (!itemLP.last){%>,<%}%>
          <%}else if(item.type == 'radio'|| item.type == 'checkbox' || item.type == 'select' || item.type == 'date' || item.type == 'time'){%>
          ${item.key}: '${item.options.defaultValue}'  <%if (!itemLP.last){%>,<%}%>
          <%}%><%}%>
        },
        dataRule: {
        <%for(item in v.ruleList){%>
            ${item.key}: [
                <%for(rule in item.rules){%>  <%if (rule.required == 1){%>{ required: true, message: '${rule.message}', trigger: 'blur'}<%} else {%>{ validator: validate${item.key}, trigger: 'blur'}  <%}%> <%if (!ruleLP.last){%>,<%}%><%}%>
                ]<%if (!itemLP.last){%>,<%}%>
        <%}%>
        }
      }
    },
    methods: {
      init (id) {
        this.${v.config.formName}.${v.config.idName} = id || ''
        this.flag = id || ''
        this.formDisabled = false
        this.title = (id ? '修改':'新增')
        this.visible = true
        this.$nextTick(() => {
          if (this.${v.config.formName}.${v.config.idName}) {
            this.$http.get(this.$http.adornUrl(`/${v.config.lowerName}/info`), {params: this.$http.adornParams({${v.config.idName}: this.${v.config.formName}.${v.config.idName}})}).then(({data}) => {
              if (data && data.code === 0) {
                for (let key in data.${v.config.lowerName}) {
                  if (data.${v.config.lowerName}[key]) {
                    this.${v.config.formName}[key] = data.${v.config.lowerName}[key]
                  }
                }
              }
            })
          } else {
            this.dataForm = Object.assign({})
          }
        })
      },
      // 表单提交
      dataFormSubmit () {
          this.$refs['${v.config.formName}'].validate((valid) => {
            if (valid) {
              this.$http.post(this.$http.adornUrl(`/${v.config.lowerName}/\${!this.flag ? 'add' : 'update'}`), this.$http.adornData(this.${v.config.formName})).then(({data}) => {
                if (data && data.code === 0) {
                  this.$message({
                    message: '操作成功',
                    type: 'success',
                    duration: 1500,
                    onClose: () => {
                      this.visible = false
                      this.$emit('refreshDataList')
                    }
                  })
                } else {
                  this.$message.error(data.msg)
                }
              })
            }
        })
      }
    }
  }
</script>
